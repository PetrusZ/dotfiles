# vim: foldmethod=marker
#  < useful shortcut  >{{{
# -----------------------------------------------------------------------------

# C-o   Rotate the panes in the current window forwards.
# w     Choose the current window interactively.
# q     kill current pane
# C-e   toogle last window
# r     rename current window
# R     reload tmux configuration
# +     toogle pane to fullscreen
# ;     Move to the previously active pane.
# ~     Show previous messages from tmux, if any.
# !     Break the current pane out of the window.
# f     Prompt to search for text in open windows.
# Tab   swap with last windo
# -     previous-window
# =     next-window

# <     resize-pane -L 5
# >     resize-pane -R 5
# J     resize-pane -D 5
# K     resize-pane -U 5


# tmux-yank shortcut
# Normal Mode
#     prefix–y — copies text from the command line to the clipboard.
#     prefix–Y — copy the current pane's current working directory to the clipboard.
#
# Copy Mode
#     y — copy selection to system clipboard.
#     Y (shift-y) — "put" selection. Equivalent to copying a selection, and pasting it to the command line.
#
# Control+Shift+v -> paste in tmux

# tmux-copycat shortcut
# Search
#     prefix + / - regex search (strings work too)
#     Grep is used for searching.
#     Searches are case insensitive.
#
# Predefined searches
#     prefix + ctrl-f - simple file search
#     prefix + ctrl-g - jumping over git status files (best used after git status command)
#     prefix + alt-h - jumping over SHA-1/SHA-256 hashes (best used after git log command)
#     prefix + ctrl-u - url search (http, ftp and git urls)
#     prefix + ctrl-d - number search (mnemonic d, as digit)
#     prefix + alt-i - ip address search
#     These start "copycat mode" and jump to first match.
#
# "Copycat mode" bindings
#     These are enabled when you search with copycat:
#
#     n - jumps to the next match
#     N - jumps to the previous match

# To copy a highlighted match:
# Enter - if you're using Tmux vi mode
# -----------------------------------------------------------------------------"}}}

#  < base  >{{{
# -----------------------------------------------------------------------------

run-shell "powerline-daemon -q"

# terminal-setting
set-option -s set-clipboard off
set -g default-terminal "xterm-256color"
set-option -ga terminal-overrides ',xterm-256color:Tc'
set -g display-time 1000
set -g history-limit 10000
set -s escape-time 40

set -g base-index         1     # 窗口编号从 1 开始计数
set -g pane-base-index    1     # 窗格编号从 1 开始计数
set -g mouse              on    # 开启鼠标
set -g renumber-windows   on    # 关掉某个窗口后，编号重排

setw -g allow-rename      on   # 禁止活动进程修改窗口名
setw -g automatic-rename  on   # 禁止自动命名新窗口
setw -g mode-keys         vi    # 进入复制模式的时候使用 vi 键位（默认是 EMACS）

# emacs key bindings in tmux command prompt (prefix + :)
set -g status-keys emacs
# focus events enabled for terminals that support them
set -g focus-events on
# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

setw -g monitor-activity on
# set -g visual-activity on

set -g mouse on

# -----------------------------------------------------------------------------"}}}

#  < bindkeys  >{{{
# -----------------------------------------------------------------------------

# Prefix key
unbind-key C-b
set-option -g prefix C-Space
bind-key C-Space send-prefix

bind-key Space copy-mode

# operation windows like vim
unbind-key s
bind-key c new-window -c '#{pane_current_path}'
bind-key v split-window -v -c '#{pane_current_path}'
bind-key s split-window -h -c '#{pane_current_path}'
bind-key V split-window -fv -c '#{pane_current_path}'
bind-key S split-window -fh -c '#{pane_current_path}'

unbind-key [
unbind-key ]
bind-key C-h select-layout even-horizontal
bind-key C-v select-layout even-vertical
bind-key ] select-layout main-horizontal
bind-key [ select-layout main-vertical
bind-key C-t select-layout tiled

# navigate panes with h
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# resize panes like vim
bind-key -r < resize-pane -L 5
bind-key -r > resize-pane -R 5
bind-key -r K resize-pane -U 5
bind-key -r J resize-pane -D 5

# select next/previous window
bind-key -T prefix C-p previous-window
bind-key -T prefix C-n next-window

# swap panes
bind M-u swap-pane -U
bind M-d swap-pane -D

bind-key q killp
bind-key Tab last

bind-key m command-prompt "splitw -h 'exec man %%'"

# Rename session and window
bind-key r command-prompt -I "#{window_name}" "rename-window '%%'"
# bind R command-prompt -I "#{session_name}" "rename-session '%%'"

# 最大/最小化窗口
bind-key + resize-pane -Z

bind-key R source-file ~/.tmux.conf \; display "Configuration Reloaded!"

# Copy and paste like in vim
# bind Escape copy-mode
unbind-key p
bind-key p paste-buffer
bind-key -T copy-mode-vi 'v' send -X begin-selection
# NOTE:NEED TO INSTALL xclip
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"

#-- tmux-powerline --#
source "/usr/lib/python3.7/site-packages/powerline/bindings/tmux/powerline.conf"
# source /home/petrus/.tmux/tmux_gruvbox_airline.theme
# -----------------------------------------------------------------------------"}}}

#  < plugins >{{{
# -----------------------------------------------------------------------------
# Automatic install tpm
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# tmux-resurrect configuration
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-processes 'ssh'
set -g @resurrect-processes 'ncmpcpp'

# tmux-continuum configuration
set -g @continuum-restore 'on'

# tpm configuration
set -g @tpm-clean 'u'

# tmux-urlview configuration
set -g @urlview-key 'C-l'

# tmux-open configuration
# o - "open" a highlighted selection with the system default program. open for OS X or xdg-open for Linux.
# Ctrl-o - open a highlighted selection with the $EDITOR
# Shift-s - search the highlighted selection directly inside a search engine (defaults to google).
set -g @open-editor-command 'vim'
set -g @open-S 'https://www.google.com/search?q='

# tmux-open configuration
# o - "open" a highlighted selection with the system default program. open for OS X or xdg-open for Linux.
# Ctrl-o - open a highlighted selection with the $EDITOR
# Shift-s - search the highlighted selection directly inside a search engine (defaults to google).

# tmux-yank shortcut
# Normal Mode
#     prefix–y — copies text from the command line to the clipboard.
#     prefix–Y — copy the current pane's current working directory to the clipboard.
#
# Copy Mode
#     y — copy selection to system clipboard.
#     Y (shift-y) — "put" selection. Equivalent to copying a selection, and pasting it to the command line.
#
# Control+Shift+v -> paste in tmux

# tmux-copycat shortcut
# Search
#     prefix + / - regex search (strings work too)
#     Grep is used for searching.
#     Searches are case insensitive.
#
# Predefined searches
#     prefix + ctrl-f - simple file search
#     prefix + ctrl-g - jumping over git status files (best used after git status command)
#     prefix + alt-h - jumping over SHA-1/SHA-256 hashes (best used after git log command)
#     prefix + ctrl-u - url search (http, ftp and git urls)
#     prefix + ctrl-d - number search (mnemonic d, as digit)
#     prefix + alt-i - ip address search
#     These start "copycat mode" and jump to first match.
#
# "Copycat mode" bindings
#     These are enabled when you search with copycat:
#
#     n - jumps to the next match
#     N - jumps to the previous match

# To copy a highlighted match:
# Enter - if you're using Tmux vi mode

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-urlview'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# Press prefix + I (capital i, as in Install) to fetch the plugin.
# Press prefix + alt + u (lowercase u as in uninstall) to remove the plugin. -> change to prefix + u
# Press prefix + U updates plugin(s)
# "run ~/.tmux/plugins/tpm/bin/clean_plugins" in tmux command to remove plugin

run -b '~/.tmux/plugins/tpm/tpm'
# -----------------------------------------------------------------------------"}}}
