## 下载设置 ##

# 断点续传
continue=true
# 最大同时下载任务数, 运行时可修改, 默认:5
max-concurrent-downloads=5
# 单个文件最大线程数, 添加时可指定, 默认:5
split=10
# 最小文件分片大小, 添加时可指定, 取值范围1M -1024M, 默认:20M
# 假定size=10M, 文件为20MiB 则使用两个来源下载; 文件为15MiB 则使用一个来源下载
min-split-size=10M
# 同一服务器连接数, 添加时可指定, 默认:1
max-connection-per-server=16
# 断开速度过慢的连接
lowest-speed-limit=0
# 整体下载速度限制, 运行时可修改, 默认:0
max-overall-download-limit=0
# 单个任务下载速度限制, 默认:0
max-download-limit=0
# 整体上传速度限制, 运行时可修改, 默认:0
#max-overall-upload-limit=1M
# 单个任务上传速度限制, 默认:0
max-upload-limit=0
# 禁用IPv6, 默认:false
#disable-ipv6=true
# 当服务器返回503错误时, aria2会尝试重连
# 尝试重连次数, 0代表无限, 默认:5
max-tries=5
# 重连冷却, 默认:0
retry-wait=10

## 进度保存相关 ##

# 从会话文件中读取下载任务
# 开启该参数后aria2将只接受session中的任务, 这意味着aria2一旦使用conf后将不再接受来自终端的任务, 所以该条只需要在启动rpc时加上就可以了
input-file=/home/petrus/.aria2/aria2.session
# 在Aria2退出时保存`错误/未完成`的下载任务到会话文件
save-session=/home/petrus/.aria2/aria2.session
# 定时保存会话, 0为退出时才保存, 需1.16.1以上版本, 默认:0
save-session-interval=60
# 强制保存会话, 即使任务已经完成, 默认:false
# 较新的版本开启后会在任务完成后依然保留.aria2文件
force-save=false

## RPC相关设置 ##

# 启用RPC, 默认:false
enable-rpc=true
# 允许所有来源, 默认:false
rpc-allow-origin-all=true
# 允许非外部访问, 默认:false
rpc-listen-all=true
# 事件轮询方式, 取值:[epoll, kqueue, port, poll, select], 不同系统默认值不同
event-poll=epoll
# RPC监听端口, 端口被占用时可以修改, 默认:6800
rpc-listen-port=6800
# 设置的RPC授权令牌, v1.18.4新增功能, 取代 --rpc-user 和 --rpc-passwd 选项
rpc-secret=06ffa48448af4996b3da7c1df48f
# 设置的RPC访问用户名, 此选项新版已废弃, 建议改用 --rpc-secret 选项
#rpc-user=<USER>
# 设置的RPC访问密码, 此选项新版已废弃, 建议改用 --rpc-secret 选项
#rpc-passwd=<PASSWD>

## BT/PT下载相关 ##

# 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:true
follow-torrent=true
# BT监听端口, 当端口被屏蔽时使用, 默认:6881-6999
listen-port=23881-23899
# 单个种子最大连接数, 默认:55
bt-max-peers=55
# 打开DHT功能, PT需要禁用, 默认:true
enable-dht=true
# 打开IPv6 DHT功能, PT需要禁用, 默认:true
#enable-dht6=false
# DHT网络监听端口, 默认:6881-6999
dht-listen-port=23881-23899
# 本地节点查找, PT需要禁用, 默认:false
bt-enable-lpd=true
# 种子交换, PT需要禁用, 默认:true
enable-peer-exchange=true
# 每个种子限速, 对少种的PT很有用, 默认:50K
#bt-request-peer-speed-limit=50K
# 客户端伪装, PT需要
peer-id-prefix=-TR2770-
user-agent=Transmission/2.77
#peer-id-prefix=-UT2210-
#user-agent=uTorrent/2210(25130)
# 当种子的分享率达到这个数时, 自动停止做种, 0为一直做种, 默认:1.0
seed-ratio=1.0
# BT校验相关, 默认:true
bt-hash-check-seed=true
# 继续之前的BT任务时, 无需再次校验, 默认:false
bt-seed-unverified=false
# 保存磁力链接元数据为种子文件(.torrent文件), 默认:false
bt-save-metadata=false
# 强制加密, 防迅雷必备
bt-require-crypto=true
#bt-tracker
bt-tracker=udp://31.14.40.30:6969/announce,udp://93.158.213.92:1337/announce,http://93.158.213.92:1337/announce,udp://151.80.120.112:2710/announce,udp://151.80.120.115:2710/announce,udp://208.83.20.20:6969/announce,udp://194.182.165.153:6969/announce,udp://185.181.60.67:80/announce,udp://5.206.13.166:6969/announce,udp://37.235.174.46:2710/announce,udp://89.234.156.205:451/announce,udp://176.113.71.60:6961/announce,http://176.113.71.60:6961/announce,udp://193.38.137.134:6969/announce,udp://207.241.226.111:6969/announce,udp://51.15.40.114:80/announce,udp://207.241.231.226:6969/announce,udp://212.47.227.58:6969/announce,udp://46.148.18.250:2710/announce,udp://51.15.55.204:1337/announce,udp://62.171.179.41:80/announce,udp://217.76.183.53:80/announce,udp://51.81.46.170:6969/announce,udp://46.148.18.254:2710/announce,udp://184.105.151.164:6969/announce,http://95.107.48.115:80/announce,http://51.15.55.204:1337/announce,http://51.81.46.170:6969/announce,http://184.105.151.164:6969/announce,udp://91.149.192.31:6969/announce,udp://95.217.161.135:6969/announce,udp://51.15.134.218:2710/announce,udp://5.226.148.20:6969/announce,udp://212.1.226.176:2710/announce,udp://45.77.141.190:6969/announce,http://51.15.134.218:2710/announce,udp://182.150.53.61:8080/announce,udp://167.179.77.133:1/announce,udp://94.224.67.24:6969/announce,udp://75.127.14.224:2710/announce,udp://222.84.67.187:6969/announce,udp://5.135.177.153:6969/announce,udp://52.58.128.163:6969/announce,udp://49.12.75.231:6969/announce,udp://103.196.36.31:6969/announce,udp://91.121.2.169:2710/announce,udp://173.249.23.124:1337/announce,udp://173.249.18.247:1337/announce,udp://173.249.8.232:1337/announce,udp://78.30.254.12:2710/announce,udp://218.5.41.31:2710/announce,udp://49.12.113.1:8866/announce,http://182.150.53.61:8080/announce,http://122.116.144.108:80/announce,http://222.84.67.187:6969/announce,http://49.12.75.231:6969/announce,http://173.249.23.124:80/announce,http://173.249.18.247:80/announce,http://173.249.8.232:80/announce,http://179.113.209.169:6969/announce,http://51.38.230.101:80/announce,http://78.30.254.12:2710/announce,http://54.37.106.164:80/announce,http://91.207.136.85:80/announce,http://49.12.113.1:8866/announce,udp://193.16.10.60:2710/announce,udp://176.113.68.67:6961/announce,udp://51.15.3.74:6969/announce,udp://139.99.100.97:8080/announce,http://176.113.68.67:6961/announce,http://54.39.179.91:6699/announce
#修改 IPv4 DHT 路由表文件路径.
dht-file-path=/home/petrus/.aria2/dht.dat


## 磁盘相关 ##

#文件保存路径, 默认为当前启动位置
dir=/home/petrus/Downloads
# dir=/run/media/petrus/1701-2D28/XBOX360
#另一种Linux文件缓存方式, 使用前确保您使用的内核支持此选项, 需要1.15及以上版本(?)
enable-mmap=true
# 文件预分配方式, 能有效降低磁盘碎片, 默认:prealloc
# 预分配所需时间: 快none < trunc < falloc < prealloc慢
# falloc仅仅比trunc慢0.06s
# 磁盘碎片: 无falloc = prealloc < trunc = none有
# 推荐优先级: 高falloc --> prealloc --> trunc -->none低
# EXT4, btrfs, xfs, NTFS等新型文件系统建议使用falloc, falloc(fallocate)在这些文件系统上可以瞬间创建完整的空文件
# trunc(ftruncate) 同样是是瞬间创建文件, 但是与falloc的区别是创建出的空文件不占用实际磁盘空间
# prealloc 传统的创建完整的空文件, aria2会一直等待直到分配结束, 也就是说如果是在HHD上下载10G文件，那么你的aria2将会一直等待你的硬盘持续满载工作直到10G文件创建完成后才会开始下载
# none将不会预分配, 磁盘碎片程度受下面的disk-cache影响, trunc too
# 请勿在传统文件系统如:EXT3, FAT32上使用falloc, 它的实际效果将与prealloc相同
# MacOS建议使用prealloc, 因为它不支持falloc, 也不支持trunc, but可以尝试用brew安装truncate以支持trunc(ftruncate)
# 事实上我有些不能理解trunc在aria2中的角色, 它与none几乎没有区别, 也就是说:太鸡肋了
file-allocation=falloc
# 启用磁盘缓存, 0为禁用缓存, 需1.16以上版本, 默认:16M
disk-cache=64M

## Misc ##

#验证用，需要1.16.1之后的release版本
referer=*
#不进行证书校验
check-certificate=false
#启用后台进程
#daemon=false
#日志文件
#日志文件的路径. 如果设置为 "-", 日志则写入到 stdout. 如果设置为空字符串(""), 日志将不会记录到磁盘上.
log=/home/petrus/.aria2/aria2.log
#日志级别
log-level=notice
#部分事件hook
#BT下载完成(如有做种将包含做种，如需调用请务必确定设定完成做种条件)
#on-bt-download-complete=
